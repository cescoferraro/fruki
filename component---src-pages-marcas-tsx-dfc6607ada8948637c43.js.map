{"version":3,"file":"component---src-pages-marcas-tsx-dfc6607ada8948637c43.js","mappings":"oKAIO,SAASA,EAAgBC,GAC9B,OACEC,EAAAA,cAACC,EAAAA,EAAG,KACDF,EAAMG,OAAOC,KAAKC,GACjBJ,EAAAA,cAACC,EAAAA,EAAG,CAACI,IAAKD,EAAEE,MACVN,EAAAA,cAACO,EAAAA,GAAM,CAACC,IAAIJ,aAAC,EAADA,EAAGE,OAAQ,IAAKF,EAAEK,SAKxC,C,qECZO,SAASC,EACdR,GAEA,OAAOS,EAAAA,EAAAA,UACL,IACET,EAAOU,MAAMT,KAAKU,IAAC,IACbA,EAAEC,KAAKC,UACPF,EAAEC,KAAKE,iBAEf,CAACd,GAEL,C,gECDA,UANEH,IAEA,MAAMG,GAASQ,EAAAA,EAAAA,GAAcX,EAAMkB,KAAKf,QACxC,OAAOF,EAAAA,cAACF,EAAAA,EAAe,CAACI,OAAQA,GAAU,C","sources":["webpack://fruki/./src/components/brandsComponent.tsx","webpack://fruki/./src/components/useBrandsMemo.tsx","webpack://fruki/./src/pages/marcas.tsx"],"sourcesContent":["import { Box } from '@mui/material'\nimport { Button } from 'gatsby-material-ui-components'\nimport * as React from 'react'\n\nexport function BrandsComponent(props: { brands: Brand[] }) {\n  return (\n    <Box>\n      {props.brands.map((s) => (\n        <Box key={s.slug}>\n          <Button to={s?.slug || ''}>{s.name}</Button>\n        </Box>\n      ))}\n    </Box>\n  )\n}\n","import { useMemo } from 'react'\n\nexport function useBrandsMemo(\n  brands: GatsbyTypes.HomeQueryQuery['brands']\n): Brand[] {\n  return useMemo(\n    () =>\n      brands.edges.map((d) => ({\n        ...(d.node.fields as GatsbyTypes.FieldsFragment),\n        ...(d.node.frontmatter as GatsbyTypes.BlogsFrontMatterFragment),\n      })),\n    [brands]\n  )\n}\n","import { graphql, PageProps } from 'gatsby'\nimport * as React from 'react'\nimport { useBrandsMemo } from '../components/useBrandsMemo'\nimport { BrandsComponent } from '../components/brandsComponent'\n\nconst BrandsPage: React.FC<PageProps<GatsbyTypes.BrandsPageListQueryQuery>> = (\n  props\n) => {\n  const brands = useBrandsMemo(props.data.brands)\n  return <BrandsComponent brands={brands} />\n}\n\nexport default BrandsPage\n\nexport const pageQuery = graphql`\n  fragment BrandsFrontMatter on MdxFrontmatter {\n    date(formatString: \"MMMM DD, YYYY\")\n    title\n    description\n    image\n    name\n    logo\n  }\n  fragment BrandsFragment on MdxConnection {\n    edges {\n      node {\n        excerpt\n        fields {\n          ...Fields\n        }\n        frontmatter {\n          ...BrandsFrontMatter\n        }\n      }\n    }\n  }\n\n  fragment BrandsFragmentQuery on Query {\n    brands: allMdx(\n      filter: { internal: { contentFilePath: { regex: \"/content/marca/\" } } }\n      sort: [{ fields: { slug: ASC } }]\n    ) {\n      ...BrandsFragment\n    }\n  }\n  query BrandsPageListQuery {\n    ...BrandsFragmentQuery\n  }\n`\n"],"names":["BrandsComponent","props","React","Box","brands","map","s","key","slug","Button","to","name","useBrandsMemo","useMemo","edges","d","node","fields","frontmatter","data"],"sourceRoot":""}