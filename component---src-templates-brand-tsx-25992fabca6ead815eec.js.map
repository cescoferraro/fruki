{"version":3,"file":"component---src-templates-brand-tsx-25992fabca6ead815eec.js","mappings":"kIAqBA,UAhBEA,IACuB,QAEvB,OADAC,QAAQC,IAAIF,GAEVG,EAAAA,cAACA,EAAAA,SAAc,KACF,QADE,EACZH,EAAMI,YAAI,OAAU,QAAV,EAAVC,EAAYC,gBAAQ,WAAV,EAAVC,EAAsBC,MACpBC,KAAKC,IAAC,IACFA,EAAEC,UACFD,EAAEE,gBAENH,KAAKI,GACGV,EAAAA,cAACW,EAAAA,GAAM,CAACC,GAAIF,EAAEG,MAAQ,IAAKH,EAAEI,QAEzB,C","sources":["webpack://fruki/./src/templates/brand.tsx"],"sourcesContent":["import { graphql, PageProps } from 'gatsby'\nimport { Button } from 'gatsby-theme-material-ui'\nimport React from 'react'\n\nconst BrandPage: React.FC<PageProps<GatsbyTypes.BrandPageQueryQuery>> = (\n  props\n): React.ReactElement => {\n  console.log(props)\n  return (\n    <React.Fragment>\n      {props.data?.products?.nodes\n        .map((n) => ({\n          ...n.fields,\n          ...n.frontmatter,\n        }))\n        .map((s) => {\n          return <Button to={s.slug || ''}>{s.name}</Button>\n        })}\n    </React.Fragment>\n  )\n}\nexport default BrandPage\n\nexport const pageQuery = graphql`\n  fragment ProductsByBrandQueryFragment on Query {\n    products: allMdx(\n      filter: {\n        internal: { contentFilePath: { regex: \"/content/produto/\" } }\n        frontmatter: { brand: { eq: $brand } }\n      }\n      sort: { frontmatter: { date: ASC } }\n    ) {\n      nodes {\n        fields {\n          slug\n        }\n        frontmatter {\n          path\n          name\n          brand\n        }\n      }\n    }\n  }\n  query BrandPageQuery($brand: String) {\n    brand: mdx(frontmatter: { path: { eq: $brand } }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        path\n        name\n        brand\n      }\n    }\n    ...ProductsByBrandQueryFragment\n  }\n`\n"],"names":["props","console","log","React","data","_props$data","products","_props$data$products","nodes","map","n","fields","frontmatter","s","Button","to","slug","name"],"sourceRoot":""}